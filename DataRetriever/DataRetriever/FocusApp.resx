<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bg_box.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>